name: Connectivity Landing Zone CI

on:
  push:
    branches:
      - main
    paths:
      - 'connectivity_lz/**'
      - '.github/workflows/connectivity.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'connectivity_lz/**'
      - '.github/workflows/connectivity.yml'

jobs:
  terraform:
    name: 'Connectivity_LZ_Core_Infra'
    runs-on: ubuntu-latest

    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID || '' }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
      AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
      AZURE_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY }}
      AZURE_SUBSCRIPTION_ID : ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
         path: ./connectivity_lz/.github/workflows

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9

      # Use Azure Login action with Service principal secret
      - name: Azure Login action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true    

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        working-directory: ./connectivity_lz
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ secrets.AZURE_STORAGE_RESOURCE_GROUP }}
          STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
          STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY }}
          CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP" -backend-config="key=connectivity.tfstate"
        
      - name: Terraform Validate
        id: validate
        working-directory: ./connectivity_lz
        run: terraform validate 
# terrafrom plan 
      - name: Terraform Plan
        id: plan
        working-directory: ./connectivity_lz
        env:
            ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
            ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform plan -var 'environment=dev'

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        id: apply
        working-directory: ./connectivity_lz
        env:
            ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
            ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve -var 'environment=dev'